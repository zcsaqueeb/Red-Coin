# Red Coin Automation Script

[ðŸ”— Try the script now!](https://t.me/RedXiobot/Red?startapp=wjKKp4a3VRra)  

## Overview

The **Red Coin Automation Script** is a powerful Python-based solution designed to streamline interactions with the **Red Coin** backend services. From automating farming processes to claiming tasks and interacting with advertisements, this script is your go-to tool for efficiently managing Red Coin activities.

## Features
- **Game Initialization**: Start new sessions with ease and retrieve essential user data.
- **Task Automation**: Fetch, track, and claim rewards for available tasks seamlessly.
- **Farming Made Easy**: Automate farming processes and maximize efficiency.
- **Ads Interaction**: Interact with AdsGram services and manage ad requests gracefully.
- **User-Friendly**: Easily manage multiple query IDs from a single file.

## How It Works
1. **Input Handling**: The script reads query IDs from a text file (`datas.txt`).
2. **Game Session**: Starts sessions using GraphQL APIs and retrieves user-specific tokens.
3. **Farming**: Automates farming activities, handling all necessary processes.
4. **Task Management**: Fetches task lists, identifies tasks by IDs, and claims their rewards.
5. **AdsGram**: Interacts with AdsGram while managing API limits.

## Setup Instructions

1. **Clone the Repository**  
   ```bash
   git clone https://github.com/zcsaqueeb/Red-Coin.git
   cd Red-Coin
   ```

2. **Install Dependencies**  
   Install the required Python libraries:  
   ```bash
   pip install requests
   ```

3. **Prepare Input File**  
   Create a `datas.txt` file containing query IDs, with one query ID per line.

4. **Run the Script**  
   Execute the script to automate your Red Coin activities:  
   ```bash
   python script_name.py
   ```

## Key Functions

| Function                     | Description                                                                 |
|------------------------------|-----------------------------------------------------------------------------|
| `read_query_ids(filename)`   | Reads query IDs from a text file.                                           |
| `send_graphql_request(query_id)` | Initializes sessions and retrieves user data (ID, token, etc.).            |
| `send_adsgram_request(telegram_id)` | Makes AdsGram API requests for interacting with advertisements.          |
| `start_farming(token)`       | Automates the farming process.                                              |
| `get_tasks()`                | Fetches all available tasks from the backend services.                      |
| `claim_task(telegram_id, task_id)` | Claims rewards for specified tasks based on task ID and Telegram ID.       |

## Example Output
When the script runs successfully, it provides outputs like the following:
- User details (Name, Telegram ID, Token).
- Task statuses and claimed rewards.
- Farming and AdsGram interactions.

## Notes
- All headers and URLs are configured for Red Coin's backend services.
- Secure handling of tokens and sensitive information is recommended.
- Ensure compliance with the platform's terms of service.

## License
This script is provided for **educational purposes only**. Use responsibly and at your own risk.
